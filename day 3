1
#include <stdio.h>

int isPrime(int num);

int main() {
    int num1, num2, i, flag;

    printf("Enter two positive integers: ");
    scanf("%d %d", &num1, &num2);

    printf("Prime numbers between %d and %d are: ", num1, num2);

    for(i=num1+1; i<num2; i++) {
        flag = isPrime(i);
        if(flag == 1) {
            printf("%d ", i);
        }
    }

    return 0;
}

int isPrime(int num) {
    int i;
    if(num < 2) {
        return 0;
    }
    for(i=2; i<=num/2; i++) {
        if(num%i == 0) {
            return 0;
        }
    }
    return 1;
}

2
#include <stdio.h>

int isPrime(int num) {
    int i;
    for (i = 2; i <= num / 2; i++) {
        if (num % i == 0) {
            return 0;
        }
    }
    return 1;
}

int main() {
    int num, i, flag = 0;
    printf("Enter a positive integer: ");
    scanf("%d", &num);
    for (i = 2; i <= num / 2; i++) {
        if (isPrime(i)) {
            if (isPrime(num - i)) {
                printf("%d = %d + %d\n", num, i, num - i);
                flag = 1;
            }
        }
    }
    if (!flag) {
        printf("%d cannot be expressed as the sum of two prime numbers.\n", num);
    }
    return 0;
}

3
#include <stdio.h>

int gcd(int num1, int num2) {
    if (num2 == 0) {
        return num1;
    }
    else {
        return gcd(num2, num1 % num2);
    }
}

int main() {
    int num1, num2;
    printf("Enter two positive integers: ");
    scanf("%d %d", &num1, &num2);
    printf("GCD of %d and %d is %d\n", num1, num2, gcd(num1, num2));
    return 0;
}

4
#include <stdio.h>

int gcd(int num1, int num2) {
    if (num2 == 0) {
        return num1;
    }
    else {
        return gcd(num2, num1 % num2);
    }
}

int main() {
    int num1, num2;
    printf("Enter two positive integers: ");
    scanf("%d %d", &num1, &num2);
    printf("GCD of %d and %d is %d\n", num1, num2, gcd(num1, num2));
    return 0;
}

5
#include <stdio.h>
#include <string.h>

#define MAX_CHARS 256

int main()
{
    char str[100];
    int freq[MAX_CHARS] = {0};
    int i, max, len;

    printf("Enter a string: ");
    gets(str);

    len = strlen(str);

    for (i = 0; i < len; i++) {
        freq[str[i]]++;
    }

    max = 0;
    for (i = 0; i < MAX_CHARS; i++) {
        if (freq[i] > freq[max]) {
            max = i;
        }
    }

    printf("Highest frequency character is '%c' with frequency %d\n", max, freq[max]);

    return 0;
}

6
#include <stdio.h>
#include <string.h>

int main()
{
    char str1[100], str2[100];
    int freq1[26] = {0}, freq2[26] = {0};
    int i, len1, len2, flag = 1;

    printf("Enter first string: ");
    scanf("%s", str1);

    printf("Enter second string: ");
    scanf("%s", str2);

    len1 = strlen(str1);
    len2 = strlen(str2);

    // Check if lengths are equal
    if (len1 != len2)
    {
        printf("Strings are not anagrams.\n");
        return 0;
    }

    // Count frequency of characters in first string
    for (i = 0; i < len1; i++)
    {
        freq1[str1[i] - 'a']++;
    }

    // Count frequency of characters in second string
    for (i = 0; i < len2; i++)
    {
        freq2[str2[i] - 'a']++;
    }

    // Compare frequencies
    for (i = 0; i < 26; i++)
    {
        if (freq1[i] != freq2[i])
        {
            flag = 0;
            break;
        }
    }

    // Print result
    if (flag)
    {
        printf("Strings are anagrams.\n");
    }
    else
    {
        printf("Strings are not anagrams.\n");
    }

    return 0;
}

7

#include <stdio.h>

int main() {
    char str[100];
    int sum = 0, i;

    printf("Enter the string: ");
    gets(str);

    for(i = 0; str[i] != '\0'; i++) {
        sum += str[i];
    }

    printf("Sum of all characters: %d", sum);

    return 0;
}

8

#include <stdio.h>
#include <string.h>

void swap(char *x, char *y) {
    char temp = *x;
    *x = *y;
    *y = temp;
}

void permute(char *str, int l, int r) {
    if (l == r) {
        printf("%s\n", str);
    } else {
        for (int i = l; i <= r; i++) {
            swap((str+l), (str+i));
            permute(str, l+1, r);
            swap((str+l), (str+i));
        }
    }
}

int main() {
    char str[100];
    printf("Enter a string: ");
    scanf("%s", str);
    printf("All possible permutations are:\n");
    int n = strlen(str);
    permute(str, 0, n-1);
    return 0;
}

9
#include <stdio.h>

#define MAX_SIZE 100

void copy_array(int *src, int *dest, int size);

int main() {
    int source_array[MAX_SIZE], target_array[MAX_SIZE];
    int size, i;

    printf("Enter the number of elements in the array: ");
    scanf("%d", &size);

    printf("Enter the elements of the array: ");
    for(i = 0; i < size; i++) {
        scanf("%d", &source_array[i]);
    }

    copy_array(source_array, target_array, size);

    printf("Elements of source array: ");
    for(i = 0; i < size; i++) {
        printf("%d ", source_array[i]);
    }

    printf("\nElements of target array: ");
    for(i = 0; i < size; i++) {
        printf("%d ", target_array[i]);
    }

    return 0;
}

void copy_array(int *src, int *dest, int size) {
    int i;

    for(i = 0; i < size; i++) {
        *(dest + i) = *(src + i);
    }
}

10

#include <stdio.h>
#include <string.h>

void reverse_string(char*);

int main()
{
    char str[100];

    printf("Enter any String :: ");
    scanf("%s", str);

    printf("The Reverse of the String [ %s ] is ::  ", str);

    reverse_string(str);

    printf("%s\n", str);

    return 0;
}

void reverse_string(char *str)
{
    int i, j;
    char temp;

    i = 0;
    j = strlen(str) - 1;

    while (i < j)
    {
        temp = *(str + i);
        *(str + i) = *(str + j);
        *(str + j) = temp;

        i++;
        j--;
    }
}
